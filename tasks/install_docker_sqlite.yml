---
- block:
  - name: create directory
    file:
      # path: "/app/{{app.value.redmine.user.user}}/{{item}}"
      path: "/app/{{item}}"
      state: directory
      owner: 999  # polkitd # temporary hardcoded for my image
      group: 999  # input #temporary hardcoded for my image
    loop:
      - files
      - sqlite
      - repos
  - name: copy service file
    template:
      src: redmine.service
      # dest: "/etc/systemd/system/{{app.value.redmine.user.user}}-redmine.service"
      dest: "/etc/systemd/system/redmine.service"
    notify:
      - daemon reload
      - restart redmine

  - block:
      - name: install git
        yum:
          name: git

      - name: clone repo
        git:
          bare: True
          repo: "{{item.url}}"
          # dest: "/app/{{app.value.redmine.user.user}}/repos/{{item.name}}"
          dest: "/app/repos/{{item.name}}"
        loop: "{{app.value.redmine.configs.repos}}"
      - name: update repos in cron
        cron:
          name: "update repo {{item.name}} for {{app.value.redmine.user.user}}"
          minute: "*/5"
          job: "cd /app/{{app.value.redmine.user.user}}/repos/{{item.name}} && git fetch origin +refs/heads/*:refs/heads/* && git reset --soft"
        loop: "{{app.value.redmine.configs.repos}}"

    when: app.value.redmine.configs.repos|default(False)
  - meta: flush_handlers

  - name: start redmine
    service:
      name: "{{app.value.redmine.user.user}}-redmine.service"
      state: started
      enabled: True

  become: True
- name: wait for redmine
  uri:
    url: "http://127.0.0.1:{{app.value.redmine.configs.port}}"
    follow_redirects: none
    method: GET
    status_code: [200, 302]
  register: _result
  until: _result.status in [200, 302]
  retries: 60
  delay: 5
  when: not ansible_check_mode
